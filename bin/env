#!/usr/bin/env bash

# These variables must exist on all systems
# SCRATCH, HOMEBREW_PREFIX, __CONDA_PREFIX
# CONDA_PREFIX is defined by conda, and can be changed by conda as new environments are activated

# normalize OSTYPE
# unset means unknown
# c.f. https://stackoverflow.com/a/18434831

case "$OSTYPE" in
    solaris*) __OSTYPE=solaris ;;
    darwin*)  __OSTYPE=darwin  ;; 
    linux*)   __OSTYPE=linux   ;;
    *bsd*)    __OSTYPE=bsd     ;;
    msys*)    __OSTYPE=msys    ;;
esac

# assume it is my own computer if it is not in this list
# using hostname instead of HOSTNAME as the env var might not be set at this stage
[[ -z "$HOSTNAME" ]] && export HOSTNAME="$(hostname)"
case "$HOSTNAME" in
    cori*)                        __HOST=cori      ;;
    *stampede2*)                  __HOST=stampede2 ;;
    comet*)                       __HOST=comet     ;;
    gordita.physics.berkeley.edu) __HOST=gordita   ;;
    bolo.berkeley.edu)            __HOST=bolo      ;;
    lpc-mini)                     __HOST=lpc-mini  ;;
esac

[[ "$__HOST" == cori ]] && HOMEBREW_PREFIX=/global/common/software/polar/.linuxbrew

# set HOMEBREW_PREFIX above or detect here
if [[ -z "$HOMEBREW_PREFIX" ]]; then
    if [[ "$__OSTYPE" == darwin ]]; then
        for homebrew_prefix in "$HOME/.homebrew" /usr/local; do
            command -v "$homebrew_prefix/bin/brew" >/dev/null 2>&1 && HOMEBREW_PREFIX="$homebrew_prefix"
        done
    elif [[ "$__OSTYPE" == linux ]]; then
        homebrew_prefix="$HOME/.linuxbrew"
        command -v "$homebrew_prefix/bin/brew" >/dev/null 2>&1 && HOMEBREW_PREFIX="$homebrew_prefix"
    fi
    unset homebrew_prefix
fi

case "$__HOST" in
    cori)
        # SCRATCH already defined
        PROJ_ROOT=/global/cfs/cdirs
        COMMON_ROOT=/global/common/software

        # module load python...
        # . activate && echo $CONDA_PREFIX
        __CONDA_PREFIX=/usr/common/software/python/3.7-anaconda-2019.07
        ;;
    stampede2)
        # SCRATCH already defined, purge after 10 days
        # WORK is like project dir, global, 1TB. Probably install software here as HOME is 10GB only.
        PROJ_DIR="$WORK"

        __CONDA_PREFIX="$WORK/anaconda3"
        ;;
    comet)
        SCRATCH="/oasis/scratch/comet/$USER/temp_project"
        PROJ_ROOT=/oasis/projects/nsf

        __CONDA_PREFIX="$HOME/anaconda3"
        ;;
    gordita)
        SCRATCH="/scratch2/$USER"
        export EDITOR=nano
        # pkgsrc
        export PATH=/usr/pkg/sbin:/usr/pkg/bin:/usr/pkg/gcc8/bin:$PATH
        export MANPATH=/usr/pkg/man:/usr/pkg/gcc8/man:$MANPATH
        export LD_LIBRARY_PATH="/usr/pkg/gcc8/lib:/usr/pkg/gcc8/x86_64-redhat-linux/lib64:$LD_LIBRARY_PATH"

        # __CONDA_PREFIX=/opt/intel/intelpython3
        ;;
    # same as * case below
    # just define this explicitly
    bolo)
        SCRATCH="/tank/scratch/$USER"
        ;;
    lpc-mini)
        SCRATCH=/scratch

        __CONDA_PREFIX=/opt/anaconda
        ;;
    *)
        # macOS catalina doesn't allow /scratch anymore
        # on macOS, SCRATCH is ~/scratch, else /scratch
        if [[ "$__OSTYPE" == darwin ]]; then
            SCRATCH="${SCRATCH:-$HOME/scratch}"

            # TODO: remove those that I'm not using anymore
            for conda_prefix in "$HOMEBREW_PREFIX/anaconda3" "$HOME/.mambaforge"; do
                command -v "$conda_prefix/bin/conda" >/dev/null 2>&1 && __CONDA_PREFIX="$conda_prefix"
            done
            unset conda_prefix
        else
            SCRATCH="${SCRATCH:-/scratch}"

            # TODO: remove those that I'm not using anymore
            for conda_prefix in /opt/anaconda "$HOMEBREW_PREFIX/anaconda3" "$HOME/anaconda3" "$HOME/miniconda3"; do
                command -v "$conda_prefix/bin/conda" >/dev/null 2>&1 && __CONDA_PREFIX="$conda_prefix"
            done
            unset conda_prefix
        fi
        ;;
esac

export SCRATCH
[[ -n "$HOMEBREW_PREFIX" ]] && export HOMEBREW_PREFIX
[[ -n "$__CONDA_PREFIX" ]] && export __CONDA_PREFIX
[[ -n "$__OSTYPE" ]] && export __OSTYPE
[[ -n "$__HOST" ]] && export __HOST
[[ -d "$HOME/.cargo" ]] && export CARGO_PREFIX="$HOME/.cargo"

# c.f. https://stackoverflow.com/a/23378780/5769446
case "$(uname)" in
    Darwin)
        export __NCPU="$(sysctl -n hw.physicalcpu_max)"
        ;;
    Linux)
        export __NCPU="$(lscpu -p | grep -E -v '^#' | sort -u -t, -k 2,4 | wc -l)"
        ;;
    FreeBSD)
        export __NCPU="$(sysctl -n hw.ncpu)"
        ;;
    *)
        export __NCPU="$(getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 1)"
        ;;
esac
export MAKEFLAGS="-j$__NCPU"

# alias (putting this in "interactive" does not help)
# this is needed to make sure mosh can see mosh-server not from PATH
# this is to avoid can't find tmux after `mu`
for i in mosh-server tmux; do
    command -v $i >/dev/null 2>&1 || {
        # later one will override earlier ones if exists
        for j in "$HOMEBREW_PREFIX/bin/$i" "/opt/local/bin/$i"; do
            [[ -f "$j" ]] && alias $i="$j"
        done
    }
done

alias ytop='ytop -p -c solarized-dark'
alias sqs='squeue -o "%16i %2t %9u %12j  %5D %.10l %.10M  %20V %15q %20S %14f %15R" --me'
