#!/usr/bin/env bash

printerr () {
    printf "%s\\n" "$@" >&2
}

# These variables must exist on all systems
# SCRATCH, __CONDA_PREFIX
# CONDA_PREFIX is defined by conda, and can be changed by conda as new environments are activated

# CONDARC ##############################################################

# https://conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html#searching-for-condarc
export CONDARC="$HOME/git/source/dotfiles/conda/.condarc"

# __OSTYPE detection ###################################################

# set __OSTYPE as normalized OSTYPE
# c.f. https://stackoverflow.com/a/18434831
case "$OSTYPE" in
    solaris*)   __OSTYPE=solaris    ;;
    darwin*)    __OSTYPE=darwin     ;; 
    linux*)     __OSTYPE=linux      ;;
    *bsd*)      __OSTYPE=bsd        ;;
    msys*)      __OSTYPE=msys       ;;
    *)          __OSTYPE="$OSTYPE"  ;;
esac

# __HOST detection #####################################################

# set HOSTNAME by hostname if undefined
if [[ -z "$HOSTNAME" ]]; then
    HOSTNAME="$(hostname)"
    export HOSTNAME
fi

if [[ -n "$NERSC_HOST" ]]; then
    __HOST="$NERSC_HOST"
else
    case "$HOSTNAME" in
        cori*)
            # permutter has NERSC_HOST defined at this stage, but not cori
            NERSC_HOST=cori
            export NERSC_HOST
            __HOST=cori
            ;;
        *.jb.man.ac.uk)
            JBCA_HOST="${HOSTNAME%%.*}"
            export JBCA_HOST
            __HOST="$JBCA_HOST"
            ;;
        *stampede2*)                    __HOST=stampede2    ;;
        comet*)                         __HOST=comet        ;;
        gordita.physics.berkeley.edu)   __HOST=gordita      ;;
        bolo.berkeley.edu)              __HOST=bolo         ;;
        lpc-mini)                       __HOST=lpc-mini     ;;
        *)                              __HOST="$HOSTNAME"  ;;
    esac
fi

# HOMEBREW_PREFIX detection ############################################

# set HOMEBREW_PREFIX if undefined and discovered
if [[ -z "$HOMEBREW_PREFIX" ]]; then
    if [[ "$__OSTYPE" == darwin ]]; then
        for homebrew_prefix in /opt/homebrew "$HOME/.homebrew" /usr/local; do
            command -v "$homebrew_prefix/bin/brew" >/dev/null 2>&1 && HOMEBREW_PREFIX="$homebrew_prefix"
        done
    elif [[ "$__OSTYPE" == linux ]]; then
        homebrew_prefix="$HOME/.linuxbrew"
        command -v "$homebrew_prefix/bin/brew" >/dev/null 2>&1 && HOMEBREW_PREFIX="$homebrew_prefix"
    fi
    unset homebrew_prefix
fi

# set __HOST-specific env var ##########################################

case "$__HOST" in
    cori|perlmutter)
        case "$__HOST" in
            cori)
                SCRATCH="/global/cscratch1/sd/$USERNAME"

                # TODO: update by running
                # module load python...
                # . activate && echo $CONDA_PREFIX
                __CONDA_PREFIX=/global/common/software/nersc/cori-2022q1/sw/python/3.9-anaconda-2021.11
                ;;
            perlmutter)
                SCRATCH="/pscratch/sd/${USERNAME:0:1}/$USERNAME"

                # TODO: update by running
                # module load python...
                # . activate && echo $CONDA_PREFIX
                __CONDA_PREFIX=/global/common/software/nersc/cori-2022q1/sw/python/3.9-anaconda-2021.11
                ;;
        esac
        PROJ_ROOT=/global/cfs/cdirs
        COMMON_ROOT=/global/common/software

        # NERSC's home is a symbolic link, and vscode's git doesn't like that
        # see https://github.com/microsoft/vscode/issues/5970
        # so we resolve to the realpath here
        HOME="$(realpath ~)"
        export HOME
        ;;
    sirius7)
        SCRATCH="/nvme/scratch/$USER"
        __CONDA_PREFIX="$SCRATCH/.mambaforge"
        ;;
    stampede2)
        # SCRATCH already defined, purge after 10 days
        # WORK is like project dir, global, 1TB. Probably install software here as HOME is 10GB only.
        PROJ_DIR="$WORK"

        __CONDA_PREFIX="$WORK/anaconda3"
        ;;
    comet)
        SCRATCH="/oasis/scratch/comet/$USER/temp_project"
        PROJ_ROOT=/oasis/projects/nsf

        __CONDA_PREFIX="$HOME/anaconda3"
        ;;
    gordita)
        SCRATCH="/scratch2/$USER"

        __CONDA_PREFIX="$HOME/mambaforge"
        ;;
    # same as * case below
    # just define this explicitly
    bolo)
        SCRATCH="/tank/scratch/$USER"
        ;;
    lpc-mini)
        SCRATCH=/scratch

        __CONDA_PREFIX=/opt/anaconda
        ;;
    *)
        # macOS catalina doesn't allow /scratch anymore
        # on macOS, SCRATCH is ~/scratch, else /scratch
        if [[ "$__OSTYPE" == darwin ]]; then
            SCRATCH="${SCRATCH:-$HOME/scratch}"

            # TODO
            conda_prefix="$HOMEBREW_PREFIX/anaconda3"
            [[ -d "$conda_prefix" ]] && printerr "Deprecation notice: you should not be using conda at $conda_prefix. It will be removed from auto-discovery in the next release."

            for conda_prefix in "$HOMEBREW_PREFIX/anaconda3" "$HOME/.mambaforge"; do
                command -v "$conda_prefix/bin/conda" >/dev/null 2>&1 && __CONDA_PREFIX="$conda_prefix"
            done
            unset conda_prefix
        elif [[ -z "$JBCA_HOST" ]]; then
            SCRATCH="${SCRATCH:-/scratch}"

            # TODO
            for conda_prefix in /opt/anaconda "$HOMEBREW_PREFIX/anaconda3" "$HOME/anaconda3" "$HOME/miniconda3"; do
                [[ -d "$conda_prefix" ]] && printerr "Deprecation notice: you should not be using conda at $conda_prefix. It will be removed from auto-discovery in the next release."
            done
            for conda_prefix in /opt/anaconda "$HOMEBREW_PREFIX/anaconda3" "$HOME/anaconda3" "$HOME/miniconda3" "$HOME/.mambaforge"; do
                command -v "$conda_prefix/bin/conda" >/dev/null 2>&1 && __CONDA_PREFIX="$conda_prefix"
            done
            unset conda_prefix
        fi
        ;;
esac

# XDG setup ############################################################

# general XDG related setup: add all systems that we want to setup XDG away from the default
if [[ ( -n "$NERSC_HOST" || -n "$JBCA_HOST" ) && -n "$SCRATCH" ]]; then
    # see https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
    export XDG_CONFIG_HOME="$SCRATCH/.local/config"
    export XDG_CACHE_HOME="$SCRATCH/.local/cache"
    export XDG_DATA_HOME="$SCRATCH/.local/share"
    export XDG_STATE_HOME="$SCRATCH/.local/state"

    # https://conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html
    export CONDA_ENVS_PATH="$XDG_DATA_HOME/conda/envs"
    export CONDA_PKGS_DIRS="$XDG_CACHE_HOME/conda/pkgs"
    export CONDA_BLD_PATH="$XDG_CACHE_HOME/conda-bld/"

    # https://wiki.archlinux.org/title/XDG_Base_Directory#Partial
    export IPYTHONDIR="$XDG_CONFIG_HOME"/jupyter
    export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME"/jupyter
    export MATHEMATICA_USERBASE="$XDG_CONFIG_HOME"/mathematica
    export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
    export WGETRC="$XDG_CONFIG_HOME/wgetrc"

    # https://numba.pydata.org/numba-doc/dev/reference/envvars.html?highlight=numba_threading_layer
    export NUMBA_CACHE_DIR="$XDG_CACHE_HOME/numba"
fi
# specific XDG related setup
if [[ -n "$NERSC_HOST" ]]; then
    # https://conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html
    export CONDA_ENVS_PATH="$CONDA_ENVS_PATH:$COMMON_ROOT/polar/.conda/envs"
    # doesn't work, see https://github.com/conda/conda/issues/10719
    # export CONDA_PKGS_DIRS="$(find /usr/common/software/python -maxdepth 2 -mindepth 2 -type d -name pkgs | sort -r | tr '\n' ':')$XDG_CACHE_HOME/conda/pkgs"
fi

# export all variables #################################################

export SCRATCH
export __OSTYPE
export __HOST
[[ -n "$HOMEBREW_PREFIX" ]] && export HOMEBREW_PREFIX HOMEBREW_NO_ANALYTICS=1
[[ -n "$__CONDA_PREFIX" ]] && export __CONDA_PREFIX
[[ -n "$PROJ_DIR" ]] && export PROJ_DIR
[[ -n "$PROJ_ROOT" ]] && export PROJ_ROOT
[[ -d "$HOME/.cargo" ]] && export CARGO_PREFIX="$HOME/.cargo"

# c.f. https://stackoverflow.com/a/23378780/5769446
case "$__OSTYPE" in
    darwin)
        __NCPU="$(sysctl -n hw.physicalcpu_max)"
        ;;
    linux)
        __NCPU="$(lscpu -p | grep -E -v '^#' | sort -u -t, -k 2,4 | wc -l)"
        ;;
    bsd)
        __NCPU="$(sysctl -n hw.ncpu)"
        ;;
    *)
        __NCPU="$(getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 1)"
        ;;
esac
export __NCPU
export MAKEFLAGS="-j$__NCPU"

export EDITOR=nano

# alias ################################################################

# set alias (putting this in "interactive" does not help)
# this is needed to make sure mosh can see mosh-server not from PATH
# this is to avoid can't find tmux after `mu`
if [[ "$__OSTYPE" == darwin ]]; then
    __PREFIX=/opt/local/bin
elif [[ -n "$NERSC_HOST" ]]; then
    __PREFIX=/global/common/software/polar/.conda/envs/system39-conda-forge/bin
elif [[ -n "$JBCA_HOST" && -n "$SCRATCH" ]]; then
    __PREFIX="$SCRATCH/.local/share/conda/envs/system39-conda-forge/bin"
else
    case "$__HOST" in
        gordita)
            __PREFIX="$HOME/mambaforge/envs/system39-conda-forge/bin"
            ;;
    esac
fi
if [[ -n "$__PREFIX" ]]; then
    for i in mosh-server tmux exa; do
        j="$__PREFIX/$i"
        [[ -f "$j" ]] && alias $i="$j"
    done
fi
if [[ -n "$JBCA_HOST" ]]; then
    alias mosh-server="$HOME/.local/conda/mosh/bin/mosh-server"
fi

alias sqs='squeue -o "%16i %2t %9u %12j  %5D %.10l %.10M  %20V %15q %20S %14f %15R" --me'

# basher ###############################################################

if [[ -d "$HOME/.basher" ]]; then
    export BASHER_ROOT="$HOME/.basher"
    export BASHER_PREFIX="$HOME/.basher/cellar"
    export BASHER_PACKAGES_PATH="$HOME/.basher/cellar/packages"
    if [[ -n "$ZSH_VERSION" ]]; then
        export BASHER_SHELL=zsh
    elif [ -n "$BASH_VERSION" ]; then
        export BASHER_SHELL=bash
    fi
fi
